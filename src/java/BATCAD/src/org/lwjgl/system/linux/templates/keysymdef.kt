/* 
 * Copyright LWJGL. All rights reserved.
 * License terms: http://lwjgl.org/license.php
 */
package org.lwjgl.system.linux.templates

import org.lwjgl.generator.*
import org.lwjgl.system.linux.*

val keysymdef = "keysymdef".nativeClass(LINUX_PACKAGE) {

	documentation = "Native bindings to keysymdef.h."

	IntConstant.block(
		"""
		TTY Functions, cleverly chosen to map to ascii, for convenience of programming, but could have been arbitrary (at the cost of lookup tables in client
		code.
		""",

		"XK_BackSpace" _ 0xFF08,
		"XK_Tab" _ 0xFF09,
		"XK_Linefeed" _ 0xFF0A,
		"XK_Clear" _ 0xFF0B,
		"XK_Return" _ 0xFF0D,
		"XK_Pause" _ 0xFF13,
		"XK_Scroll_Lock" _ 0xFF14,
		"XK_Sys_Req" _ 0xFF15,
		"XK_Escape" _ 0xFF1B,
		"XK_Delete" _ 0xFFFF
	)

	IntConstant.block(
		"International & multi-key character composition",

		"XK_Multi_key" _ 0xFF20
	)

	IntConstant.block(
		"Japanese keyboard support",

		"XK_Kanji" _ 0xFF21,
		"XK_Muhenkan" _ 0xFF22,
		"XK_Henkan_Mode" _ 0xFF23,
		"XK_Henkan" _ 0xFF23,
		"XK_Romaji" _ 0xFF24,
		"XK_Hiragana" _ 0xFF25,
		"XK_Katakana" _ 0xFF26,
		"XK_Hiragana_Katakana" _ 0xFF27,
		"XK_Zenkaku" _ 0xFF28,
		"XK_Hankaku" _ 0xFF29,
		"XK_Zenkaku_Hankaku" _ 0xFF2A,
		"XK_Touroku" _ 0xFF2B,
		"XK_Massyo" _ 0xFF2C,
		"XK_Kana_Lock" _ 0xFF2D,
		"XK_Kana_Shift" _ 0xFF2E,
		"XK_Eisu_Shift" _ 0xFF2F,
		"XK_Eisu_toggle" _ 0xFF30
	)

	IntConstant.block(
		"Cursor control & motion",

		"XK_Home" _ 0xFF50,
		"XK_Left" _ 0xFF51,
		"XK_Up" _ 0xFF52,
		"XK_Right" _ 0xFF53,
		"XK_Down" _ 0xFF54,
		"XK_Prior" _ 0xFF55,
		"XK_Page_Up" _ 0xFF55,
		"XK_Next" _ 0xFF56,
		"XK_Page_Down" _ 0xFF56,
		"XK_End" _ 0xFF57,
		"XK_Begin" _ 0xFF58
	)

	IntConstant.block(
		"Misc Functions",

		"XK_Select" _ 0xFF60,
		"XK_Print" _ 0xFF61,
		"XK_Execute" _ 0xFF62,
		"XK_Insert" _ 0xFF63,
		"XK_Undo" _ 0xFF65,
		"XK_Redo" _ 0xFF66,
		"XK_Menu" _ 0xFF67,
		"XK_Find" _ 0xFF68,
		"XK_Cancel" _ 0xFF69,
		"XK_Help" _ 0xFF6A,
		"XK_Break" _ 0xFF6B,
		"XK_Mode_switch" _ 0xFF7E,
		"XK_script_switch" _ 0xFF7E,
		"XK_Num_Lock" _ 0xFF7F
	)

	IntConstant.block(
		"Keypad Functions, keypad numbers cleverly chosen to map to ascii",

		"XK_KP_Space" _ 0xFF80,
		"XK_KP_Tab" _ 0xFF89,
		"XK_KP_Enter" _ 0xFF8D,
		"XK_KP_F1" _ 0xFF91,
		"XK_KP_F2" _ 0xFF92,
		"XK_KP_F3" _ 0xFF93,
		"XK_KP_F4" _ 0xFF94,
		"XK_KP_Home" _ 0xFF95,
		"XK_KP_Left" _ 0xFF96,
		"XK_KP_Up" _ 0xFF97,
		"XK_KP_Right" _ 0xFF98,
		"XK_KP_Down" _ 0xFF99,
		"XK_KP_Prior" _ 0xFF9A,
		"XK_KP_Page_Up" _ 0xFF9A,
		"XK_KP_Next" _ 0xFF9B,
		"XK_KP_Page_Down" _ 0xFF9B,
		"XK_KP_End" _ 0xFF9C,
		"XK_KP_Begin" _ 0xFF9D,
		"XK_KP_Insert" _ 0xFF9E,
		"XK_KP_Delete" _ 0xFF9F,
		"XK_KP_Equal" _ 0xFFBD,
		"XK_KP_Multiply" _ 0xFFAA,
		"XK_KP_Add" _ 0xFFAB,
		"XK_KP_Separator" _ 0xFFAC,
		"XK_KP_Subtract" _ 0xFFAD,
		"XK_KP_Decimal" _ 0xFFAE,
		"XK_KP_Divide" _ 0xFFAF,
		"XK_KP_0" _ 0xFFB0,
		"XK_KP_1" _ 0xFFB1,
		"XK_KP_2" _ 0xFFB2,
		"XK_KP_3" _ 0xFFB3,
		"XK_KP_4" _ 0xFFB4,
		"XK_KP_5" _ 0xFFB5,
		"XK_KP_6" _ 0xFFB6,
		"XK_KP_7" _ 0xFFB7,
		"XK_KP_8" _ 0xFFB8,
		"XK_KP_9" _ 0xFFB9
	)

	IntConstant.block(
		"""
		Auxilliary Functions; note the duplicate definitions for left and right function keys; Sun keyboards and a few other manufactures have such function key
		groups on the left and/or right sides of the keyboard. We've not found a keyboard with more than 35 function keys total.
		""",

		"XK_F1" _ 0xFFBE,
		"XK_F2" _ 0xFFBF,
		"XK_F3" _ 0xFFC0,
		"XK_F4" _ 0xFFC1,
		"XK_F5" _ 0xFFC2,
		"XK_F6" _ 0xFFC3,
		"XK_F7" _ 0xFFC4,
		"XK_F8" _ 0xFFC5,
		"XK_F9" _ 0xFFC6,
		"XK_F10" _ 0xFFC7,
		"XK_F11" _ 0xFFC8,
		"XK_L1" _ 0xFFC8,
		"XK_F12" _ 0xFFC9,
		"XK_L2" _ 0xFFC9,
		"XK_F13" _ 0xFFCA,
		"XK_L3" _ 0xFFCA,
		"XK_F14" _ 0xFFCB,
		"XK_L4" _ 0xFFCB,
		"XK_F15" _ 0xFFCC,
		"XK_L5" _ 0xFFCC,
		"XK_F16" _ 0xFFCD,
		"XK_L6" _ 0xFFCD,
		"XK_F17" _ 0xFFCE,
		"XK_L7" _ 0xFFCE,
		"XK_F18" _ 0xFFCF,
		"XK_L8" _ 0xFFCF,
		"XK_F19" _ 0xFFD0,
		"XK_L9" _ 0xFFD0,
		"XK_F20" _ 0xFFD1,
		"XK_L10" _ 0xFFD1,
		"XK_F21" _ 0xFFD2,
		"XK_R1" _ 0xFFD2,
		"XK_F22" _ 0xFFD3,
		"XK_R2" _ 0xFFD3,
		"XK_F23" _ 0xFFD4,
		"XK_R3" _ 0xFFD4,
		"XK_F24" _ 0xFFD5,
		"XK_R4" _ 0xFFD5,
		"XK_F25" _ 0xFFD6,
		"XK_R5" _ 0xFFD6,
		"XK_F26" _ 0xFFD7,
		"XK_R6" _ 0xFFD7,
		"XK_F27" _ 0xFFD8,
		"XK_R7" _ 0xFFD8,
		"XK_F28" _ 0xFFD9,
		"XK_R8" _ 0xFFD9,
		"XK_F29" _ 0xFFDA,
		"XK_R9" _ 0xFFDA,
		"XK_F30" _ 0xFFDB,
		"XK_R10" _ 0xFFDB,
		"XK_F31" _ 0xFFDC,
		"XK_R11" _ 0xFFDC,
		"XK_F32" _ 0xFFDD,
		"XK_R12" _ 0xFFDD,
		"XK_F33" _ 0xFFDE,
		"XK_R13" _ 0xFFDE,
		"XK_F34" _ 0xFFDF,
		"XK_R14" _ 0xFFDF,
		"XK_F35" _ 0xFFE0,
		"XK_R15" _ 0xFFE0
	)

	IntConstant.block(
		"Modifiers",

		"XK_Shift_L" _ 0xFFE1,
		"XK_Shift_R" _ 0xFFE2,
		"XK_Control_L" _ 0xFFE3,
		"XK_Control_R" _ 0xFFE4,
		"XK_Caps_Lock" _ 0xFFE5,
		"XK_Shift_Lock" _ 0xFFE6,
		"XK_Meta_L" _ 0xFFE7,
		"XK_Meta_R" _ 0xFFE8,
		"XK_Alt_L" _ 0xFFE9,
		"XK_Alt_R" _ 0xFFEA,
		"XK_Super_L" _ 0xFFEB,
		"XK_Super_R" _ 0xFFEC,
		"XK_Hyper_L" _ 0xFFED,
		"XK_Hyper_R" _ 0xFFEE
	)

	IntConstant.block(
		"ISO 9995 Function and Modifier Keys Byte 3 = 0xFE",

		"XK_ISO_Lock" _ 0xFE01,
		"XK_ISO_Level2_Latch" _ 0xFE02,
		"XK_ISO_Level3_Shift" _ 0xFE03,
		"XK_ISO_Level3_Latch" _ 0xFE04,
		"XK_ISO_Level3_Lock" _ 0xFE05,
		"XK_ISO_Group_Shift" _ 0xFF7E,
		"XK_ISO_Group_Latch" _ 0xFE06,
		"XK_ISO_Group_Lock" _ 0xFE07,
		"XK_ISO_Next_Group" _ 0xFE08,
		"XK_ISO_Next_Group_Lock" _ 0xFE09,
		"XK_ISO_Prev_Group" _ 0xFE0A,
		"XK_ISO_Prev_Group_Lock" _ 0xFE0B,
		"XK_ISO_First_Group" _ 0xFE0C,
		"XK_ISO_First_Group_Lock" _ 0xFE0D,
		"XK_ISO_Last_Group" _ 0xFE0E,
		"XK_ISO_Last_Group_Lock" _ 0xFE0F,
		"XK_ISO_Left_Tab" _ 0xFE20,
		"XK_ISO_Move_Line_Up" _ 0xFE21,
		"XK_ISO_Move_Line_Down" _ 0xFE22,
		"XK_ISO_Partial_Line_Up" _ 0xFE23,
		"XK_ISO_Partial_Line_Down" _ 0xFE24,
		"XK_ISO_Partial_Space_Left" _ 0xFE25,
		"XK_ISO_Partial_Space_Right" _ 0xFE26,
		"XK_ISO_Set_Margin_Left" _ 0xFE27,
		"XK_ISO_Set_Margin_Right" _ 0xFE28,
		"XK_ISO_Release_Margin_Left" _ 0xFE29,
		"XK_ISO_Release_Margin_Right" _ 0xFE2A,
		"XK_ISO_Release_Both_Margins" _ 0xFE2B,
		"XK_ISO_Fast_Cursor_Left" _ 0xFE2C,
		"XK_ISO_Fast_Cursor_Right" _ 0xFE2D,
		"XK_ISO_Fast_Cursor_Up" _ 0xFE2E,
		"XK_ISO_Fast_Cursor_Down" _ 0xFE2F,
		"XK_ISO_Continuous_Underline" _ 0xFE30,
		"XK_ISO_Discontinuous_Underline" _ 0xFE31,
		"XK_ISO_Emphasize" _ 0xFE32,
		"XK_ISO_Center_Object" _ 0xFE33,
		"XK_ISO_Enter" _ 0xFE34,
		"XK_dead_grave" _ 0xFE50,
		"XK_dead_acute" _ 0xFE51,
		"XK_dead_circumflex" _ 0xFE52,
		"XK_dead_tilde" _ 0xFE53,
		"XK_dead_macron" _ 0xFE54,
		"XK_dead_breve" _ 0xFE55,
		"XK_dead_abovedot" _ 0xFE56,
		"XK_dead_diaeresis" _ 0xFE57,
		"XK_dead_abovering" _ 0xFE58,
		"XK_dead_doubleacute" _ 0xFE59,
		"XK_dead_caron" _ 0xFE5A,
		"XK_dead_cedilla" _ 0xFE5B,
		"XK_dead_ogonek" _ 0xFE5C,
		"XK_dead_iota" _ 0xFE5D,
		"XK_dead_voiced_sound" _ 0xFE5E,
		"XK_dead_semivoiced_sound" _ 0xFE5F,
		"XK_First_Virtual_Screen" _ 0xFED0,
		"XK_Prev_Virtual_Screen" _ 0xFED1,
		"XK_Next_Virtual_Screen" _ 0xFED2,
		"XK_Last_Virtual_Screen" _ 0xFED4,
		"XK_Terminate_Server" _ 0xFED5,
		"XK_Pointer_Left" _ 0xFEE0,
		"XK_Pointer_Right" _ 0xFEE1,
		"XK_Pointer_Up" _ 0xFEE2,
		"XK_Pointer_Down" _ 0xFEE3,
		"XK_Pointer_UpLeft" _ 0xFEE4,
		"XK_Pointer_UpRight" _ 0xFEE5,
		"XK_Pointer_DownLeft" _ 0xFEE6,
		"XK_Pointer_DownRight" _ 0xFEE7,
		"XK_Pointer_Button_Dflt" _ 0xFEE8,
		"XK_Pointer_Button1" _ 0xFEE9,
		"XK_Pointer_Button2" _ 0xFEEA,
		"XK_Pointer_Button3" _ 0xFEEB,
		"XK_Pointer_Button4" _ 0xFEEC,
		"XK_Pointer_Button5" _ 0xFEED,
		"XK_Pointer_DblClick_Dflt" _ 0xFEEE,
		"XK_Pointer_DblClick1" _ 0xFEEF,
		"XK_Pointer_DblClick2" _ 0xFEF0,
		"XK_Pointer_DblClick3" _ 0xFEF1,
		"XK_Pointer_DblClick4" _ 0xFEF2,
		"XK_Pointer_DblClick5" _ 0xFEF3,
		"XK_Pointer_Drag_Dflt" _ 0xFEF4,
		"XK_Pointer_Drag1" _ 0xFEF5,
		"XK_Pointer_Drag2" _ 0xFEF6,
		"XK_Pointer_Drag3" _ 0xFEF7,
		"XK_Pointer_Drag4" _ 0xFEF8,
		"XK_Pointer_EnableKeys" _ 0xFEF9,
		"XK_Pointer_Accelerate" _ 0xFEFA,
		"XK_Pointer_DfltBtnNext" _ 0xFEFB,
		"XK_Pointer_DfltBtnPrev" _ 0xFEFC
	)

	IntConstant.block(
		"3270 Terminal Keys Byte 3 = 0xFD",

		"XK_3270_Duplicate" _ 0xFD01,
		"XK_3270_FieldMark" _ 0xFD02,
		"XK_3270_Right2" _ 0xFD03,
		"XK_3270_Left2" _ 0xFD04,
		"XK_3270_BackTab" _ 0xFD05,
		"XK_3270_EraseEOF" _ 0xFD06,
		"XK_3270_EraseInput" _ 0xFD07,
		"XK_3270_Reset" _ 0xFD08,
		"XK_3270_Quit" _ 0xFD09,
		"XK_3270_PA1" _ 0xFD0A,
		"XK_3270_PA2" _ 0xFD0B,
		"XK_3270_PA3" _ 0xFD0C,
		"XK_3270_Test" _ 0xFD0D,
		"XK_3270_Attn" _ 0xFD0E,
		"XK_3270_CursorBlink" _ 0xFD0F,
		"XK_3270_AltCursor" _ 0xFD10,
		"XK_3270_KeyClick" _ 0xFD11,
		"XK_3270_Jump" _ 0xFD12,
		"XK_3270_Ident" _ 0xFD13,
		"XK_3270_Rule" _ 0xFD14,
		"XK_3270_Copy" _ 0xFD15,
		"XK_3270_Play" _ 0xFD16,
		"XK_3270_Setup" _ 0xFD17,
		"XK_3270_Record" _ 0xFD18,
		"XK_3270_ChangeScreen" _ 0xFD19,
		"XK_3270_DeleteWord" _ 0xFD1A,
		"XK_3270_ExSelect" _ 0xFD1B,
		"XK_3270_CursorSelect" _ 0xFD1C,
		"XK_3270_PrintScreen" _ 0xFD1D,
		"XK_3270_Enter" _ 0xFD1E
	)

	IntConstant.block(
		"Latin 1 Byte 3 = 0",

		"XK_space" _ 0x020,
		"XK_exclam" _ 0x021,
		"XK_quotedbl" _ 0x022,
		"XK_numbersign" _ 0x023,
		"XK_dollar" _ 0x024,
		"XK_percent" _ 0x025,
		"XK_ampersand" _ 0x026,
		"XK_apostrophe" _ 0x027,
		"XK_quoteright" _ 0x027,
		"XK_parenleft" _ 0x028,
		"XK_parenright" _ 0x029,
		"XK_asterisk" _ 0x02a,
		"XK_plus" _ 0x02b,
		"XK_comma" _ 0x02c,
		"XK_minus" _ 0x02d,
		"XK_period" _ 0x02e,
		"XK_slash" _ 0x02f,
		"XK_0" _ 0x030,
		"XK_1" _ 0x031,
		"XK_2" _ 0x032,
		"XK_3" _ 0x033,
		"XK_4" _ 0x034,
		"XK_5" _ 0x035,
		"XK_6" _ 0x036,
		"XK_7" _ 0x037,
		"XK_8" _ 0x038,
		"XK_9" _ 0x039,
		"XK_colon" _ 0x03a,
		"XK_semicolon" _ 0x03b,
		"XK_less" _ 0x03c,
		"XK_equal" _ 0x03d,
		"XK_greater" _ 0x03e,
		"XK_question" _ 0x03f,
		"XK_at" _ 0x040,
		"XK_A" _ 0x041,
		"XK_B" _ 0x042,
		"XK_C" _ 0x043,
		"XK_D" _ 0x044,
		"XK_E" _ 0x045,
		"XK_F" _ 0x046,
		"XK_G" _ 0x047,
		"XK_H" _ 0x048,
		"XK_I" _ 0x049,
		"XK_J" _ 0x04a,
		"XK_K" _ 0x04b,
		"XK_L" _ 0x04c,
		"XK_M" _ 0x04d,
		"XK_N" _ 0x04e,
		"XK_O" _ 0x04f,
		"XK_P" _ 0x050,
		"XK_Q" _ 0x051,
		"XK_R" _ 0x052,
		"XK_S" _ 0x053,
		"XK_T" _ 0x054,
		"XK_U" _ 0x055,
		"XK_V" _ 0x056,
		"XK_W" _ 0x057,
		"XK_X" _ 0x058,
		"XK_Y" _ 0x059,
		"XK_Z" _ 0x05a,
		"XK_bracketleft" _ 0x05b,
		"XK_backslash" _ 0x05c,
		"XK_bracketright" _ 0x05d,
		"XK_asciicircum" _ 0x05e,
		"XK_underscore" _ 0x05f,
		"XK_grave" _ 0x060,
		"XK_quoteleft" _ 0x060,
		"XK_a" _ 0x061,
		"XK_b" _ 0x062,
		"XK_c" _ 0x063,
		"XK_d" _ 0x064,
		"XK_e" _ 0x065,
		"XK_f" _ 0x066,
		"XK_g" _ 0x067,
		"XK_h" _ 0x068,
		"XK_i" _ 0x069,
		"XK_j" _ 0x06a,
		"XK_k" _ 0x06b,
		"XK_l" _ 0x06c,
		"XK_m" _ 0x06d,
		"XK_n" _ 0x06e,
		"XK_o" _ 0x06f,
		"XK_p" _ 0x070,
		"XK_q" _ 0x071,
		"XK_r" _ 0x072,
		"XK_s" _ 0x073,
		"XK_t" _ 0x074,
		"XK_u" _ 0x075,
		"XK_v" _ 0x076,
		"XK_w" _ 0x077,
		"XK_x" _ 0x078,
		"XK_y" _ 0x079,
		"XK_z" _ 0x07a,
		"XK_braceleft" _ 0x07b,
		"XK_bar" _ 0x07c,
		"XK_braceright" _ 0x07d,
		"XK_asciitilde" _ 0x07e,
		"XK_nobreakspace" _ 0x0a0,
		"XK_exclamdown" _ 0x0a1,
		"XK_cent" _ 0x0a2,
		"XK_sterling" _ 0x0a3,
		"XK_currency" _ 0x0a4,
		"XK_yen" _ 0x0a5,
		"XK_brokenbar" _ 0x0a6,
		"XK_section" _ 0x0a7,
		"XK_diaeresis" _ 0x0a8,
		"XK_copyright" _ 0x0a9,
		"XK_ordfeminine" _ 0x0aa,
		"XK_guillemotleft" _ 0x0ab,
		"XK_notsign" _ 0x0ac,
		"XK_hyphen" _ 0x0ad,
		"XK_registered" _ 0x0ae,
		"XK_macron" _ 0x0af,
		"XK_degree" _ 0x0b0,
		"XK_plusminus" _ 0x0b1,
		"XK_twosuperior" _ 0x0b2,
		"XK_threesuperior" _ 0x0b3,
		"XK_acute" _ 0x0b4,
		"XK_mu" _ 0x0b5,
		"XK_paragraph" _ 0x0b6,
		"XK_periodcentered" _ 0x0b7,
		"XK_cedilla" _ 0x0b8,
		"XK_onesuperior" _ 0x0b9,
		"XK_masculine" _ 0x0ba,
		"XK_guillemotright" _ 0x0bb,
		"XK_onequarter" _ 0x0bc,
		"XK_onehalf" _ 0x0bd,
		"XK_threequarters" _ 0x0be,
		"XK_questiondown" _ 0x0bf,
		"XK_Agrave" _ 0x0c0,
		"XK_Aacute" _ 0x0c1,
		"XK_Acircumflex" _ 0x0c2,
		"XK_Atilde" _ 0x0c3,
		"XK_Adiaeresis" _ 0x0c4,
		"XK_Aring" _ 0x0c5,
		"XK_AE" _ 0x0c6,
		"XK_Ccedilla" _ 0x0c7,
		"XK_Egrave" _ 0x0c8,
		"XK_Eacute" _ 0x0c9,
		"XK_Ecircumflex" _ 0x0ca,
		"XK_Ediaeresis" _ 0x0cb,
		"XK_Igrave" _ 0x0cc,
		"XK_Iacute" _ 0x0cd,
		"XK_Icircumflex" _ 0x0ce,
		"XK_Idiaeresis" _ 0x0cf,
		"XK_ETH" _ 0x0d0,
		"XK_Eth" _ 0x0d0,
		"XK_Ntilde" _ 0x0d1,
		"XK_Ograve" _ 0x0d2,
		"XK_Oacute" _ 0x0d3,
		"XK_Ocircumflex" _ 0x0d4,
		"XK_Otilde" _ 0x0d5,
		"XK_Odiaeresis" _ 0x0d6,
		"XK_multiply" _ 0x0d7,
		"XK_Ooblique" _ 0x0d8,
		"XK_Ugrave" _ 0x0d9,
		"XK_Uacute" _ 0x0da,
		"XK_Ucircumflex" _ 0x0db,
		"XK_Udiaeresis" _ 0x0dc,
		"XK_Yacute" _ 0x0dd,
		"XK_THORN" _ 0x0de,
		"XK_Thorn" _ 0x0de,
		"XK_ssharp" _ 0x0df,
		"XK_agrave" _ 0x0e0,
		"XK_aacute" _ 0x0e1,
		"XK_acircumflex" _ 0x0e2,
		"XK_atilde" _ 0x0e3,
		"XK_adiaeresis" _ 0x0e4,
		"XK_aring" _ 0x0e5,
		"XK_ae" _ 0x0e6,
		"XK_ccedilla" _ 0x0e7,
		"XK_egrave" _ 0x0e8,
		"XK_eacute" _ 0x0e9,
		"XK_ecircumflex" _ 0x0ea,
		"XK_ediaeresis" _ 0x0eb,
		"XK_igrave" _ 0x0ec,
		"XK_iacute" _ 0x0ed,
		"XK_icircumflex" _ 0x0ee,
		"XK_idiaeresis" _ 0x0ef,
		"XK_eth" _ 0x0f0,
		"XK_ntilde" _ 0x0f1,
		"XK_ograve" _ 0x0f2,
		"XK_oacute" _ 0x0f3,
		"XK_ocircumflex" _ 0x0f4,
		"XK_otilde" _ 0x0f5,
		"XK_odiaeresis" _ 0x0f6,
		"XK_division" _ 0x0f7,
		"XK_oslash" _ 0x0f8,
		"XK_ugrave" _ 0x0f9,
		"XK_uacute" _ 0x0fa,
		"XK_ucircumflex" _ 0x0fb,
		"XK_udiaeresis" _ 0x0fc,
		"XK_yacute" _ 0x0fd,
		"XK_thorn" _ 0x0fe,
		"XK_ydiaeresis" _ 0x0ff
	)

}